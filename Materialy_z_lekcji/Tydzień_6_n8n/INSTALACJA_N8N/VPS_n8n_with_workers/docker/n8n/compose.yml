volumes:
  db_storage:
  redis_storage:
  n8n_storage:
    external: true
  caddy_data:
    external: true

x-shared: &shared
  restart: always
  image: docker.n8n.io/n8nio/n8n
  environment:
    - N8N_HOST=${SUBDOMAIN}.${DOMAIN_NAME}
    - N8N_PORT=5678
    - N8N_PROTOCOL=https
    - NODE_ENV=production
    - WEBHOOK_URL=https://${SUBDOMAIN}.${DOMAIN_NAME}/
    - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_PORT=5432
    - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
    - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
    - EXECUTIONS_MODE=queue
    - QUEUE_BULL_REDIS_HOST=redis
    - QUEUE_HEALTH_CHECK_ACTIVE=true
    - N8N_ENCRYPTION_KEY=${ENCRYPTION_KEY}
    - EXECUTIONS_DATA_PRUNE=true
    - EXECUTIONS_DATA_MAX_AGE=168 # 168 - 7 dni
    - EXECUTIONS_DATA_PRUNE_MAX_COUNT=10000
    - NODE_FUNCTION_ALLOW_EXTERNAL=cheerio
    - N8N_EMAIL_MODE=smtp
    - N8N_SMTP_HOST=
    - N8N_SMTP_PORT=
    - N8N_SMTP_USER=
    - N8N_SMTP_PASS=
    - N8N_SMTP_SENDER=
    - N8N_SMTP_SSL=false
    - N8N_CONCURRENCY_PRODUCTION_LIMIT=20
  links:
    - postgres
    - redis
    - caddy
  volumes:
    - n8n_storage:/home/node/.n8n
    - ${DATA_FOLDER}/local_files:/files
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_NON_ROOT_USER
      - POSTGRES_NON_ROOT_PASSWORD
    volumes:
      - db_storage:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10


  redis:
    image: redis:6-alpine
    restart: always
    volumes:
      - redis_storage:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 10


  caddy:
    image: caddy:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - ${DATA_FOLDER}/caddy_config:/config
      - ${DATA_FOLDER}/caddy_config/Caddyfile:/etc/caddy/Caddyfile

  n8n:
    <<: *shared
    ports:
      - 5678:5678
    

  n8n-worker:
    <<: *shared
    command: worker
    depends_on:
      - n8n

  n8n-webhook:
    <<: *shared
    depends_on:
      - n8n